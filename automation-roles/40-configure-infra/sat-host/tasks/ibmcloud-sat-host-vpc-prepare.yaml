---

- set_fact:
    bastion_host: "{{ current_sat_host['infrastructure']['bastion_host'] }}"
    nfs_server_ssh_key: "{{ current_sat_host['infrastructure']['keys'][0] }}"

- name: Retrieve Terraform tfstate from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ environment_name }}-terraform-tfstate"
    secret_group: "{{ environment_name }}"

- set_fact:
    tfstate: "{{ secret_value }}"

- name: Show tfstate file
  debug:
    var: tfstate

# Retrieve the public IP address of the bastion, which will be used as a jump host
- set_fact:
    bastion_fip: "{{ tfstate.resources | json_query(query) | first }}"
  vars:
    query: >-
      [?type=='ibm_is_floating_ip' && instances[0].attributes.name=='{{bastion_host}}'].
      {public_ip_address: instances[0].attributes.address, public_ip_name: instances[0].attributes.name}

- name: Show public address of bastion VSI
  debug:
    msg: "{{ bastion_fip }}"

# Retrieve the private IP address of the Satellite host
- set_fact:
    _sat_host_ip: "{{ tfstate.resources | json_query(query) | first }}"
  vars:
    query: >-
      [?type=='ibm_is_instance' && instances[0].attributes.name=='{{ current_sat_host.name }}'].instances[0].attributes.primary_network_interface[0].primary_ipv4_address

- name: Sat Server IP address
  debug:
    msg: "{{ _sat_host_ip }}"    

- name: Create temporary directory to hold SSH private key
  tempfile:
    state: directory
    suffix: _ssh
  register: ssh_key_dir

- name: Retrieve SSH private key {{ nfs_server_ssh_key }}-key from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "{{ nfs_server_ssh_key }}-ssh-key"
    secret_group: "{{ environment_name }}"

- name: Store SSH private key in file {{ ssh_key_dir.path }}/id_rsa
  copy:
    content: "{{ secret_value }}\n"
    dest: "{{ ssh_key_dir.path }}/id_rsa"
    mode: 0600

- name: Create dynamic Ansible group vpc_bastion_server
  add_host:
    name: "{{bastion_fip.public_ip_address}}"
    groups: vpc_bastion_server
    ansible_ssh_private_key_file: "{{ ssh_key_dir.path }}/id_rsa"

- name: Create dynamic Ansible group
  add_host:
    name: "{{ _sat_host_ip }}" 
    groups: "{{ new_host_group }}"
    ansible_ssh_private_key_file: "{{ ssh_key_dir.path }}/id_rsa"
    ansible_ssh_common_args: '-o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i {{ ssh_key_dir.path }}/id_rsa -W %h:%p -q {{ bastion_fip.public_ip_address }}"'
    sat_host: "{{ current_sat_host }}"
