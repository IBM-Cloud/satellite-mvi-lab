---
# delete storage assignmen
- name: get storage assignment
  block:
  - name: get assignments
    command: ibmcloud sat storage assignment ls --location {{ all_config.satellite[0].name }} --output json -q
    register: output

  - set_fact:
      _storage_assignment_id: "{{ output.stdout | from_json | json_query(query) }}"
    vars:
      query: "[?name == '{{ env_id }}-assignment']"

  - set_fact:
      _storage_assignment_id: "{{ (_storage_assignment_id | first).uuid }}"
    when: _storage_assignment_id | length > 0

- name: delete storage assignment
  command: ibmcloud sat storage assignment rm -f --assignment {{_storage_assignment_id }}
  when: _storage_assignment_id != []

# delete storate config
- name: get storage config name
  block:
  - name: get configs
    command: ibmcloud sat storage config ls --location {{ all_config.satellite[0].name }} --output json -q
    register: output

  - set_fact:
      _storage_config_id: "{{ output.stdout | from_json | json_query(query) }}"
    vars:
      query: "[?location == '{{ all_config.satellite[0].name }}']"

  - set_fact:
      _storage_config_id: "{{ (_storage_config_id | first ).uuid }}"
    when: _storage_config_id | length > 0

- name: delete storage config
  command: ibmcloud sat storage config rm -f --config {{ _storage_config_id }}
  when: _storage_config_id != []

# delete OpenShift cluster
- name: get ROKS cluster id
  block:
    - name: get clusters
      command: ibmcloud sat cluster ls --output json -q
      register: output

    - set_fact:
        _cluster_id: "{{ output.stdout | from_json | json_query(query) }}"
      vars:
        query: "clusterSearch[?registration.name == '{{cluster_name}}']"

    - set_fact:
        _cluster_id: "{{(_cluster_id | first).clusterId}}"
      when: _cluster_id | length > 0

- name: delete cluster
  command: ibmcloud oc cluster rm --cluster {{cluster_name}} -f -q
  when: _cluster_id != []

- name: wait for cluster to disappear
  command: ibmcloud sat cluster ls --output json -q
  register: output
  until:  output.stdout | from_json | json_query(query) | length == 0
  vars:
    query: "clusterSearch[?registration.name == '{{cluster_name}}'].clusterId"
  retries: 100
  delay: 10
